{"version":3,"sources":["actions/types.js","reducer/errorReducer.js","services/validation.js","reducer/authReducer.js","reducer/index.js","store.js","services/auth.js","actions/authentication.js","components/Navbar.js","components/Register.js","components/Login.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","SET_CURRENT_USER","initialState","isEmpty","value","undefined","Object","keys","length","trim","isAuthenticated","user","combineReducers","errors","state","action","type","payload","auth","store","createStore","rootReducer","compose","applyMiddleware","thunk","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","history","dispatch","localStorage","removeItem","push","Navbar","e","preventDefault","this","props","authLinks","className","href","onClick","onLogout","bind","src","avatar","alt","name","title","style","width","marginRight","guestLinks","to","id","Component","connect","withRouter","Register","email","password","password_confirm","handleInputChange","handleSubmit","setState","target","registerUser","nextProps","marginTop","marginBottom","onSubmit","placeholder","classnames","onChange","post","then","res","catch","err","response","data","Login","loginUser","setItem","jwt_decode","Home","jwtToken","currentTime","Date","now","exp","window","location","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d1ddc00.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;\n","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from '../services/validation';\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    errors: errorReducer,\n    auth: authReducer\n});\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer';\n\nconst inititalState = {};\n\nconst store = createStore(\n    rootReducer,\n    inititalState,\n    compose(applyMiddleware(thunk)));\n\nexport default store;\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    }\n    else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../services/auth';\nimport jwt_decode from 'jwt-decode';\n\nexport const registerUser = (user, history) => dispatch => {\n    axios.post('/api/register', user)\n        .then(res => history.push('/login'))\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            });\n        });\n}\n\nexport const loginUser = (user) => dispatch => {\n    axios.post('/api/login', user)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            });\n        });\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const logoutUser = (history) => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/authentication';\nimport { withRouter } from 'react-router-dom';\n\nclass Navbar extends Component {\n\n    onLogout(e) {\n        e.preventDefault();\n        this.props.logoutUser(this.props.history);\n    }\n\n    render() {\n        const {isAuthenticated, user} = this.props.auth;\n        const authLinks = (\n            <ul className=\"navbar-nav ml-auto\">\n                <a href=\"#\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>\n                    <img src={user.avatar} alt={user.name} title={user.name}\n                         className=\"rounded-circle\"\n                         style={{ width: '25px', marginRight: '5px'}} />\n                    Logout\n                </a>\n            </ul>\n        )\n        const guestLinks = (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/register\">Sign Up</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">Sign In</Link>\n                </li>\n            </ul>\n        )\n        return(\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <Link className=\"navbar-brand\" to=\"/\">Products App</Link>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    {isAuthenticated ? authLinks : guestLinks}\n                </div>\n            </nav>\n        )\n    }\n}\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(Navbar));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            password_confirm: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password_confirm: this.state.password_confirm\n        }\n        this.props.registerUser(user, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        const { errors } = this.state;\n        return(\n            <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n                <h2 style={{marginBottom: '40px'}}>Registration</h2>\n                <form onSubmit={ this.handleSubmit }>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Name\"\n                            className={classnames('form-control form-control-lg', {\n                                'is-invalid': errors.name\n                            })}\n                            name=\"name\"\n                            onChange={ this.handleInputChange }\n                            value={ this.state.name }\n                        />\n                        {errors.name && (<div className=\"invalid-feedback\">{errors.name}</div>)}\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            className={classnames('form-control form-control-lg', {\n                                'is-invalid': errors.email\n                            })}\n                            name=\"email\"\n                            onChange={ this.handleInputChange }\n                            value={ this.state.email }\n                        />\n                        {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            className={classnames('form-control form-control-lg', {\n                                'is-invalid': errors.password\n                            })}\n                            name=\"password\"\n                            onChange={ this.handleInputChange }\n                            value={ this.state.password }\n                        />\n                        {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            className={classnames('form-control form-control-lg', {\n                                'is-invalid': errors.password_confirm\n                            })}\n                            name=\"password_confirm\"\n                            onChange={ this.handleInputChange }\n                            value={ this.state.password_confirm }\n                        />\n                        {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Register User\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register))\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {loginUser} from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            email: this.state.email,\n            password: this.state.password,\n        }\n        this.props.loginUser(user);\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"container\" style={{marginTop: '50px', width: '700px'}}>\n                <h2 style={{marginBottom: '40px'}}>Login</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            className={classnames('form-control form-control-lg', {\n                                'is-invalid': errors.email\n                            })}\n                            name=\"email\"\n                            onChange={this.handleInputChange}\n                            value={this.state.email}\n                        />\n                        {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            className={classnames('form-control form-control-lg', {\n                                'is-invalid': errors.password\n                            })}\n                            name=\"password\"\n                            onChange={this.handleInputChange}\n                            value={this.state.password}\n                        />\n                        {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                            Login User\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, {loginUser})(Login)\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../actions/authentication';\nimport classnames from 'classnames';\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                Home Component\n            </div>\n        );\n    }\n}\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './services/auth';\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\n\nif(localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const decoded = jwt_decode(localStorage.jwtToken);\n    store.dispatch(setCurrentUser(decoded));\n\n    const currentTime = Date.now() / 1000;\n    if(decoded.exp < currentTime) {\n        store.dispatch(logoutUser());\n        window.location.href = '/login'\n    }\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div>\n                        <Navbar/>\n                        <Route exact path=\"/\" component={Home}/>\n                        <div className=\"container\">\n                            <Route exact path=\"/register\" component={Register}/>\n                            <Route exact path=\"/login\" component={Login}/>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}